{"name":"Pi Pin Manager","tagline":"Setup Raspberry Pi GPIO pins using a configuration file, not boilerplate","body":"Boilerplate code is annoying and sometimes there can be a lot of it working with [Raspberry Pi GPIO](https://pypi.python.org/pypi/RPi.GPIO). I got tired of setting the board mode and declaring GPIO channels in every script so I made a library that uses a config file instead. In addition to getting rid of the boilerplate, **Pi-Pin-Manager** has the added benefit of pulling the configuration out of the code. This means you can modify any pin's behavior without ever touching a Python file or having to redeploy your program.\r\n\r\n\r\n### Install It\r\n\r\n```\r\npip install Pi-Pin-Manager\r\n```\r\n\r\n### Configure It\r\n\r\nA config file, written in [YAML](http://en.wikipedia.org/wiki/YAML), is used to define the initial pin setup. If a pin is not defined here it will not be available to the `PinManager`. The following snippet shows an example configuration file:\r\n\r\n```yaml\r\n18:\r\n  mode: OUT\r\n  initial: HIGH\r\n23:\r\n  mode: OUT\r\n  initial: LOW\r\n24:\r\n  mode: IN\r\n  event: RISING\r\n  handler: do_something\r\n  bounce: 200\r\n```\r\n\r\n* Add a numbered element for each pin to enable\r\n* `mode` - This controls whether the pin will be used for input or output. Accepted values are: `IN`, `OUT`. (Required)\r\n* `initial` - This controls the starting value of the pin. Accepted values are: `LOW`, `HIGH`. (Optional - defaults to `LOW`)\r\n* `resistor` - This controls the software defined pull up/pull down resistor available in the Broadcom SOC. Accepted values are: `PUD_UP`, `PUD_DOWN`. (Optional - defaults to none)\r\n* `event` - This is used in combination with a pin set to input mode (`mode: IN`). Accepted values are: `RISING`, `FALLING`, `BOTH`.\r\n* `handler` - This is used in combination with an `event` to designate a function to call when an `event` happens. This value should correspond to a method defined in your handler class.\r\n* `bounce` - This can be used when an `event` is defined to prevent multiple `handler` calls being fired accidentally. The value is the number of milliseconds to wait before detecting another `event`.\r\n\r\n**Note:**\r\n\r\nFor full documentation about available GPIO input pin configurations see the [documentation](http://sourceforge.net/p/raspberry-gpio-python/wiki/Examples/).\r\n\r\n\r\n### Use It (No Event)\r\n\r\n```python\r\nfrom pi_pin_manager import PinManager\r\n\r\n\r\npins = PinManager(config_file='path/to/config/file.yml')\r\n\r\n\r\n# Read a pin\r\nresult = pins.read(18)\r\n\r\n# Write to a pin\r\npins.write(19, 1)\r\n\r\n# Turn pin on\r\npins.on(19)\r\n\r\n# Turn pin off\r\npins.off(19)\r\n\r\n# Get configuration for a pin\r\nresult = pins.get_config(23)\r\n\r\n# Get configuration for all pins\r\nresult = pins.get_config()\r\n\r\n# Cleanup GPIO on single pin\r\npins.cleanup(18)\r\n\r\n# Cleanup GPIO on all pins\r\npins.cleanup()\r\n```\r\n\r\n### Use It (With Event)\r\n\r\nIf an `event` and `handler` have been defined for a pin in the config file, then you must also provide a class that contains the callbacks to execute. Each method you add to this class should match the name of a `handler` value. Based on the example code below, `handler: do_something` is expected in the config file `path/to/config/file.yml`.\r\n\r\n```python\r\nfrom pi_pin_manager import PinManager\r\n\r\n\r\nclass EventHandlers(object):\r\n\r\n    def do_something(self, pin_number):\r\n        # Whatever you want to trigger when an event is detected goes here\r\n        print('pin {0}'.format(pin_number))\r\n\r\n\r\npins = PinManager(config_file='path/to/config/file.yml', event_handlers=EventHandlers())\r\n```\r\n\r\n### Exceptions\r\n\r\nThis package may raise the following custom exceptions:\r\n\r\n* `PinNotDefinedError` - This is raised when attempting to `read` or `write` to a pin that is not defined in the configuration file.\r\n* `PinConfigurationError` - This is raised when attempting to perform an action on a pin that does not match its configuration. For example, trying to `write` to a pin not defined as `mode: OUT`.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}